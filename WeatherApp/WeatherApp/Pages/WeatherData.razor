@page "/weather"

@inject IHttpClientFactory _clientFactory
<h3>WeatherData</h3>

@if (string.IsNullOrWhiteSpace(errstring) == false)
{
    <div class="h2">@errstring</div>;
}
else if (forecast is null)
{
    <div class="h4">Loading...</div>
}
else
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Date</th>
                <th>Weather</th>
                <th>Low</th>
                <th>High</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var w in forecast.consolidated_weather)
                {
            <tr>
                <td>@w.applicable_date</td>
                <td>@w.weather_state_abbr</td>
                <td>@w.min_temp</td>
                <td>@w.max_temp</td>
            </tr>
                }
        </tbody>
    </table>
}


@code {      

    WeatherForecastModel forecast;
    string errstring;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://www.metaweather.com/api/location/44418/");

        var client = _clientFactory.CreateClient();

        HttpResponseMessage response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            forecast = await response.Content.ReadFromJsonAsync<WeatherForecastModel>();
            errstring = null;
        }
        else
        {
            errstring =  $" error msg { response.ReasonPhrase}";
        }
    }

}
